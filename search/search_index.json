{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Protocol buffers \u2013 a language-neutral, platform-neutral, extensible way of serializing structured data for use in communications protocols, data storage, and more. Advantages - are simpler - are 3 to 10 times smaller - are 20 to 100 times faster - are less ambiguous - generate data access classes that are easier to use programmatically","title":"Introduction"},{"location":"#introduction","text":"Protocol buffers \u2013 a language-neutral, platform-neutral, extensible way of serializing structured data for use in communications protocols, data storage, and more. Advantages - are simpler - are 3 to 10 times smaller - are 20 to 100 times faster - are less ambiguous - generate data access classes that are easier to use programmatically","title":"Introduction"},{"location":"examples/","text":"","title":"Examples"},{"location":"protocsetup/","text":"Proto Compiler Installation Find the latest release of protobuf compiler here Based on the choose of the language, download the .zip file Extract the contents of the file Execute the below commands $ cd protobuf- version_no $ ./configure $ make $ make check $ sudo make install $ which protoc $ protoc --version","title":"Setup"},{"location":"protocsetup/#proto-compiler-installation","text":"Find the latest release of protobuf compiler here Based on the choose of the language, download the .zip file Extract the contents of the file Execute the below commands $ cd protobuf- version_no $ ./configure $ make $ make check $ sudo make install $ which protoc $ protoc --version","title":"Proto Compiler Installation"}]}